///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import "DBSerializableProtocol.h"

@class DBSHARINGFilePermission;
@class DBSHARINGFolderPolicy;
@class DBSHARINGSharedContentLinkMetadata;
@class DBSHARINGSharedFileMetadata;
@class DBUSERSTeam;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - API Object

///
/// The `SharedFileMetadata` struct.
///
/// Properties of the shared file.
///
/// This class implements the `DBSerializable` protocol (serialize and
/// deserialize instance methods), which is required for all Obj-C SDK API route
/// objects.
///
@interface DBSHARINGSharedFileMetadata : NSObject <DBSerializable, NSCopying>

#pragma mark - Instance fields

/// The metadata of the link associated for the file.
@property (nonatomic, readonly, nullable) DBSHARINGSharedContentLinkMetadata *linkMetadata;

/// Policies governing this shared file.
@property (nonatomic, readonly) DBSHARINGFolderPolicy *policy;

/// The sharing permissions that requesting user has on this file. This
/// corresponds to the entries given in `actions` in
/// `DBSHARINGGetFileMetadataBatchArg` or `actions` in
/// `DBSHARINGGetFileMetadataArg`.
@property (nonatomic, readonly, nullable) NSArray<DBSHARINGFilePermission *> *permissions;

/// The team that owns the file. This field is not present if the file is not
/// owned by a team.
@property (nonatomic, readonly, nullable) DBUSERSTeam *ownerTeam;

/// The ID of the parent shared folder. This field is present only if the file
/// is contained within a shared folder.
@property (nonatomic, readonly, copy, nullable) NSString *parentSharedFolderId;

/// URL for displaying a web preview of the shared file.
@property (nonatomic, readonly, copy) NSString *previewUrl;

/// The lower-case full path of this file. Absent for unmounted files.
@property (nonatomic, readonly, copy, nullable) NSString *pathLower;

/// The cased path to be used for display purposes only. In rare instances the
/// casing will not correctly match the user's filesystem, but this behavior
/// will match the path provided in the Core API v1. Absent for unmounted files.
@property (nonatomic, readonly, copy, nullable) NSString *pathDisplay;

/// The name of this file.
@property (nonatomic, readonly, copy) NSString *name;

/// The ID of the file.
@property (nonatomic, readonly, copy) NSString *id_;

/// Timestamp indicating when the current user was invited to this shared file.
/// If the user was not invited to the shared file, the timestamp will indicate
/// when the user was invited to the parent shared folder. This value may be
/// absent.
@property (nonatomic, readonly, nullable) NSDate *timeInvited;

#pragma mark - Constructors

///
/// Full constructor for the struct (exposes all instance variables).
///
/// @param policy Policies governing this shared file.
/// @param previewUrl URL for displaying a web preview of the shared file.
/// @param name The name of this file.
/// @param id_ The ID of the file.
/// @param linkMetadata The metadata of the link associated for the file.
/// @param permissions The sharing permissions that requesting user has on this
/// file. This corresponds to the entries given in `actions` in
/// `DBSHARINGGetFileMetadataBatchArg` or `actions` in
/// `DBSHARINGGetFileMetadataArg`.
/// @param ownerTeam The team that owns the file. This field is not present if
/// the file is not owned by a team.
/// @param parentSharedFolderId The ID of the parent shared folder. This field
/// is present only if the file is contained within a shared folder.
/// @param pathLower The lower-case full path of this file. Absent for unmounted
/// files.
/// @param pathDisplay The cased path to be used for display purposes only. In
/// rare instances the casing will not correctly match the user's filesystem,
/// but this behavior will match the path provided in the Core API v1. Absent
/// for unmounted files.
/// @param timeInvited Timestamp indicating when the current user was invited to
/// this shared file. If the user was not invited to the shared file, the
/// timestamp will indicate when the user was invited to the parent shared
/// folder. This value may be absent.
///
/// @return An initialized instance.
///
- (instancetype)initWithPolicy:(DBSHARINGFolderPolicy *)policy
                    previewUrl:(NSString *)previewUrl
                          name:(NSString *)name
                           id_:(NSString *)id_
                  linkMetadata:(nullable DBSHARINGSharedContentLinkMetadata *)linkMetadata
                   permissions:(nullable NSArray<DBSHARINGFilePermission *> *)permissions
                     ownerTeam:(nullable DBUSERSTeam *)ownerTeam
          parentSharedFolderId:(nullable NSString *)parentSharedFolderId
                     pathLower:(nullable NSString *)pathLower
                   pathDisplay:(nullable NSString *)pathDisplay
                   timeInvited:(nullable NSDate *)timeInvited;

///
/// Convenience constructor (exposes only non-nullable instance variables with
/// no default value).
///
/// @param policy Policies governing this shared file.
/// @param previewUrl URL for displaying a web preview of the shared file.
/// @param name The name of this file.
/// @param id_ The ID of the file.
///
/// @return An initialized instance.
///
- (instancetype)initWithPolicy:(DBSHARINGFolderPolicy *)policy
                    previewUrl:(NSString *)previewUrl
                          name:(NSString *)name
                           id_:(NSString *)id_;

- (instancetype)init NS_UNAVAILABLE;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the `SharedFileMetadata` struct.
///
@interface DBSHARINGSharedFileMetadataSerializer : NSObject

///
/// Serializes `DBSHARINGSharedFileMetadata` instances.
///
/// @param instance An instance of the `DBSHARINGSharedFileMetadata` API object.
///
/// @return A json-compatible dictionary representation of the
/// `DBSHARINGSharedFileMetadata` API object.
///
+ (NSDictionary *)serialize:(DBSHARINGSharedFileMetadata *)instance;

///
/// Deserializes `DBSHARINGSharedFileMetadata` instances.
///
/// @param dict A json-compatible dictionary representation of the
/// `DBSHARINGSharedFileMetadata` API object.
///
/// @return An instantiation of the `DBSHARINGSharedFileMetadata` object.
///
+ (DBSHARINGSharedFileMetadata *)deserialize:(NSDictionary *)dict;

@end

NS_ASSUME_NONNULL_END
